@model Ns.Utility.Web.Areas.Admin.Models.RangeModel
@{
    ViewBag.Title = "AddEdit";
}

<div class="form-top">
    @using (Html.BeginForm("AddEdit", "Range", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
    {
        <div class="well well-sm">
            <div class="row">
                <div class="col-md-12">
                    <div class="pull-right">
                        <button type="submit" class=" btn btn-sm btn-primary">Submit</button>
                        @Html.ActionLink("Cancel", "List", "Range", null, new { area = "Admin", @class = "btn btn-sm btn-primary" })
                    </div>
                </div>
            </div>
        </div>

        <div class="panel panel-default form-top">
            <div class="panel-heading">
                <h3 class="panel-title">ID Range</h3>
            </div>
            <div class="panel-body">
                @if (!Model.IsNew)
                {
                    @Html.HiddenFor(x => x.ProjectId)
                    <div class="form-group">
                        @Html.LabelFor(x => x.Id, new { @class = "col-md-2 control-label" })
                        <div class="col-md-5">
                            @Html.TextBoxFor(x => x.Id, new { @class = "form-control", @readonly = "readonly" })
                        </div>
                    </div>
                }
                <div class="form-group">
                    @Html.LabelFor(x => x.Name, new { @class = "col-md-2 control-label" })
                    <div class="col-md-5">
                        @Html.TextBoxFor(x => x.Name, new { @class = "form-control", placeholder = "Enter Range Name" })
                        @Html.ValidationMessageFor(x => x.Name)
                    </div>
                </div>
                @if (!Model.IsNew)
                {
                    <div class="form-group">
                        @Html.LabelFor(x => x.ProjectName, new { @class = "col-md-2 control-label" })
                        <div class="col-md-5">
                            @Html.TextBoxFor(x => x.ProjectName, new { @class = "form-control", @readonly = "readonly" })
                            @Html.ValidationMessageFor(x => x.ProjectName)
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(x => x.Min, new { @class = "col-md-2 control-label" })
                        <div class="col-md-5">
                            @Html.TextBoxFor(x => x.Min, new { @class = "form-control", @readonly = "readonly" })
                            @Html.ValidationMessageFor(x => x.Min)
                        </div>
                    </div>
                }
                else
                {
                    <div class="form-group">
                        @Html.LabelFor(x => x.ProjectId, new { @class = "col-md-2 control-label" })
                        <div class="col-md-5">
                            @Html.DropDownListFor(x => x.ProjectId, Model.Projects.Select(x => new SelectListItem { Text = x.Name, Value = x.Id.ToString() }), new { @class = "form-control" })
                            @Html.ValidationMessageFor(x => x.ProjectId)
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(x => x.Min, new { @class = "col-md-2 control-label" })
                        <div class="col-md-5">
                            @Html.TextBoxFor(x => x.Min, new { @class = "form-control", placeholder = "Enter Minimum" })
                            @Html.ValidationMessageFor(x => x.Min)
                        </div>
                    </div>
                }

                <div class="form-group">
                    @Html.LabelFor(x => x.Max, new { @class = "col-md-2 control-label" })
                    <div class="col-md-5">
                        @Html.TextBoxFor(x => x.Max, new { @class = "form-control", placeholder = "Enter Maximum" })
                        @Html.ValidationMessageFor(x => x.Max)
                    </div>
                </div>
                @if (!Model.IsNew)
                {
                    <div class="form-group">
                        @Html.LabelFor(x => x.Next, new { @class = "col-md-2 control-label" })
                        <div class="col-md-5">
                            @Html.TextBoxFor(x => x.Next, new { @class = "form-control", @readonly = "readonly" })
                        </div>
                    </div>
                }
                <div class="form-group">
                    @Html.LabelFor(x => x.Description, new { @class = "col-md-2 control-label" })
                    <div class="col-md-5">
                        @Html.TextAreaFor(x => x.Description, 3, 3, new { @class = "form-control", placeholder = "Enter Project Code" })
                        @Html.ValidationMessageFor(x => x.Description)
                    </div>
                </div>
            </div>
        </div>
    }
</div>