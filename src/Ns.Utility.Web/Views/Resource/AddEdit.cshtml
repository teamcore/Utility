@model Ns.Utility.Web.Models.ResourceModel
@using Ns.Utility.Web.Framework.Security
@using System.Security.Claims
@{
    ViewBag.Title = "AddEdit";
}
@{
    IUserSession session = new UserSession(User as ClaimsPrincipal);
}
<div class="panel panel-default form-top">
    <div class="panel-heading">
        <h3 class="panel-title">Aprimo Resource</h3>
    </div>
    <div class="panel-body">
        @using (Html.BeginForm("AddEdit", "Resource", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
        {
            if (!Model.IsNew)
            {
                <div class="form-group">
                    @Html.LabelFor(x => x.Id, new { @class = "col-md-2 control-label" })
                    <div class="col-md-5">
                        @Html.TextBoxFor(x => x.Id, new { @class = "form-control", @readonly = "readonly" })
                    </div>
                </div>
            }
            <div class="form-group">
                @Html.LabelFor(x => x.Key, new { @class = "col-md-2 control-label" })
                <div class="col-md-5">
                    @Html.TextBoxFor(x => x.Key, new { @class = "form-control", placeholder = "Next ID", @readonly = "readonly" })
                    @Html.ValidationMessageFor(x => x.Key)
                </div>
            </div>
            if (!session.HasProject)
            {
                if (!Model.IsNew)
                {
                    @Html.HiddenFor(x => x.ProjectId)
                    <div class="form-group">
                        @Html.LabelFor(x => x.ProjectName, new { @class = "col-md-2 control-label" })
                        <div class="col-md-5">
                            @Html.TextBoxFor(x => x.ProjectName, new { @class = "form-control", @readonly = "readonly" })
                            @Html.ValidationMessageFor(x => x.ProjectName)
                        </div>
                    </div>
                }
                else
                {
                    <div class="form-group">
                        @Html.LabelFor(x => x.ProjectId, new { @class = "col-md-2 control-label" })
                        <div class="col-md-5">
                            @Html.DropDownListFor(x => x.ProjectId, Model.Projects.Select(x => new SelectListItem { Text = x.Name, Value = x.Id.ToString() }), new { @class = "form-control" })
                            @Html.ValidationMessageFor(x => x.ProjectId)
                        </div>
                    </div>
                }
            }
            <div class="form-group">
                @Html.LabelFor(x => x.Text, new { @class = "col-md-2 control-label" })
                <div class="col-md-5">
                    @Html.TextBoxFor(x => x.Text, new { @class = "form-control", placeholder = "Enter Text" })
                    @Html.ValidationMessageFor(x => x.Text)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(x => x.Description, new { @class = "col-md-2 control-label" })
                <div class="col-md-5">
                    @Html.TextAreaFor(x => x.Description, 3, 3, new { @class = "form-control", placeholder = "Enter Description" })
                    @Html.ValidationMessageFor(x => x.Description)
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-5">
                    <button type="submit" class=" btn btn-default">Submit</button>
                    @Html.ActionLink("Cancel", "List", "Resource", null, new { area = "Admin", @class = "btn btn-default" })
                </div>
            </div>
        }
    </div>
</div>